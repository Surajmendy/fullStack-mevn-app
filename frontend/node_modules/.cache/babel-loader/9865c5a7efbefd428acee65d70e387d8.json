{"remainingRequest":"/Users/abdulsuraj/Desktop/lord99/fullStack-MEVN-App/frontend/node_modules/babel-loader/lib/index.js!/Users/abdulsuraj/Desktop/lord99/fullStack-MEVN-App/frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/abdulsuraj/Desktop/lord99/fullStack-MEVN-App/frontend/src/store/index.js","dependencies":[{"path":"/Users/abdulsuraj/Desktop/lord99/fullStack-MEVN-App/frontend/src/store/index.js","mtime":1631133942651},{"path":"/Users/abdulsuraj/Desktop/lord99/fullStack-MEVN-App/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1626540312004},{"path":"/Users/abdulsuraj/Desktop/lord99/fullStack-MEVN-App/frontend/node_modules/babel-loader/lib/index.js","mtime":1626540311987},{"path":"/Users/abdulsuraj/Desktop/lord99/fullStack-MEVN-App/frontend/node_modules/eslint-loader/index.js","mtime":1626540316001}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFZ1ZSBmcm9tICJ2dWUiOwppbXBvcnQgVnVleCBmcm9tICJ2dWV4IjsKaW1wb3J0IGNyZWF0ZVBlcnNpc3RlZFN0YXRlIGZyb20gInZ1ZXgtcGVyc2lzdGVkc3RhdGUiOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMKCmltcG9ydCBBcGkgZnJvbSAnLi4vc2VydmljZXMvYXBpJzsKVnVlLnVzZShWdWV4KTsKZXhwb3J0IGRlZmF1bHQgbmV3IFZ1ZXguU3RvcmUoewogIHBsdWdpbnM6IFtjcmVhdGVQZXJzaXN0ZWRTdGF0ZSh7CiAgICBzdG9yYWdlOiB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UKICB9KV0sCiAgc3RhdGU6IHsKICAgIGFsbENsaWVudHM6IFtdLAogICAgYWxsUHJvdmlkZXJzOiBbXSwKICAgIGFsbENsaWVudERhdGFMb2FkaW5nOiBmYWxzZQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBTRVRfQUxMX0NMSUVOVFNfSU5fU1RBVEU6IGZ1bmN0aW9uIFNFVF9BTExfQ0xJRU5UU19JTl9TVEFURShzdGF0ZSwgZGF0YSkgewogICAgICBzdGF0ZS5hbGxDbGllbnRzID0gZGF0YTsKICAgIH0sCiAgICBTRVRfQUxMX1BST1ZJREVSU19JTl9TVEFURTogZnVuY3Rpb24gU0VUX0FMTF9QUk9WSURFUlNfSU5fU1RBVEUoc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUuYWxsUHJvdmlkZXJzID0gZGF0YTsKICAgIH0sCiAgICBTRVRfQUxMX0NMSUVOVFNfREFUQV9MT0FESU5HX0lOX1NUQVRFOiBmdW5jdGlvbiBTRVRfQUxMX0NMSUVOVFNfREFUQV9MT0FESU5HX0lOX1NUQVRFKHN0YXRlLCBkYXRhKSB7CiAgICAgIHN0YXRlLmFsbENsaWVudERhdGFMb2FkaW5nID0gZGF0YTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGdldEFsbENsaWVudHM6IGZ1bmN0aW9uIGdldEFsbENsaWVudHMoX3JlZikgewogICAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgIGNvbW1pdCgnU0VUX0FMTF9DTElFTlRTX0RBVEFfTE9BRElOR19JTl9TVEFURScsIHRydWUpOwogICAgICBBcGkoKS5nZXQoJ2NsaWVudC9hbGwnKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGNvbW1pdCgnU0VUX0FMTF9DTElFTlRTX0lOX1NUQVRFJywgcmVzcG9uc2UuZGF0YS5jbGllbnRzKTsKICAgICAgICBjb21taXQoJ1NFVF9BTExfQ0xJRU5UU19EQVRBX0xPQURJTkdfSU5fU1RBVEUnLCB0cnVlKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICB9KTsKICAgIH0sCiAgICBnZXRBbGxQcm92aWRlcnM6IGZ1bmN0aW9uIGdldEFsbFByb3ZpZGVycyhfcmVmMikgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICBBcGkoKS5nZXQoJ3Byb3ZpZGVyL2FsbCcpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgY29tbWl0KCdTRVRfQUxMX1BST1ZJREVSU19JTl9TVEFURScsIHJlc3BvbnNlLmRhdGEucHJvdmlkZXJzKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICB9KTsKICAgIH0KICB9LAogIG1vZHVsZXM6IHt9Cn0pOw=="},{"version":3,"sources":["/Users/abdulsuraj/Desktop/lord99/fullStack-MEVN-App/frontend/src/store/index.js"],"names":["Vue","Vuex","createPersistedState","Api","use","Store","plugins","storage","window","sessionStorage","state","allClients","allProviders","allClientDataLoading","mutations","SET_ALL_CLIENTS_IN_STATE","data","SET_ALL_PROVIDERS_IN_STATE","SET_ALL_CLIENTS_DATA_LOADING_IN_STATE","actions","getAllClients","commit","get","then","response","clients","catch","error","console","log","getAllProviders","providers","modules"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,oBAAP,MAAiC,qBAAjC,C,CACA;;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACAH,GAAG,CAACI,GAAJ,CAAQH,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACI,KAAT,CAAe;AAC5BC,EAAAA,OAAO,EAAE,CACPJ,oBAAoB,CAAC;AACnBK,IAAAA,OAAO,EAAEC,MAAM,CAACC;AADG,GAAD,CADb,CADmB;AAM5BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,UAAU,EAAE,EADT;AAEHC,IAAAA,YAAY,EAAE,EAFX;AAGHC,IAAAA,oBAAoB,EAAE;AAHnB,GANqB;AAW5BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,wBADO,oCACmBL,KADnB,EAC0BM,IAD1B,EACgC;AACnCN,MAAAA,KAAK,CAACC,UAAN,GAAmBK,IAAnB;AACH,KAHM;AAIPC,IAAAA,0BAJO,sCAIqBP,KAJrB,EAI4BM,IAJ5B,EAIkC;AACrCN,MAAAA,KAAK,CAACE,YAAN,GAAqBI,IAArB;AACH,KANM;AAOPE,IAAAA,qCAPO,iDAOgCR,KAPhC,EAOuCM,IAPvC,EAO6C;AAChDN,MAAAA,KAAK,CAACG,oBAAN,GAA6BG,IAA7B;AACH;AATM,GAXiB;AAsB5BG,EAAAA,OAAO,EAAE;AACLC,IAAAA,aADK,+BACsB;AAAA,UAAVC,MAAU,QAAVA,MAAU;AACvBA,MAAAA,MAAM,CAAC,uCAAD,EAA0C,IAA1C,CAAN;AACAlB,MAAAA,GAAG,GAAGmB,GAAN,CAAU,YAAV,EAAwBC,IAAxB,CAA6B,UAACC,QAAD,EAAc;AACvCH,QAAAA,MAAM,CAAC,0BAAD,EAA6BG,QAAQ,CAACR,IAAT,CAAcS,OAA3C,CAAN;AACAJ,QAAAA,MAAM,CAAC,uCAAD,EAA0C,IAA1C,CAAN;AACH,OAHD,EAGGK,KAHH,CAGS,UAACC,KAAD,EAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OALD;AAMH,KATI;AAULG,IAAAA,eAVK,kCAUwB;AAAA,UAAVT,MAAU,SAAVA,MAAU;AACzBlB,MAAAA,GAAG,GAAGmB,GAAN,CAAU,cAAV,EAA0BC,IAA1B,CAA+B,UAACC,QAAD,EAAc;AACzCH,QAAAA,MAAM,CAAC,4BAAD,EAA+BG,QAAQ,CAACR,IAAT,CAAce,SAA7C,CAAN;AACH,OAFD,EAEGL,KAFH,CAES,UAACC,KAAD,EAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAJD;AAKH;AAhBI,GAtBmB;AAwC5BK,EAAAA,OAAO,EAAE;AAxCmB,CAAf,CAAf","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport createPersistedState from \"vuex-persistedstate\";\n// eslint-disable-next-line no-unused-vars\nimport Api from '../services/api'\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  plugins: [\n    createPersistedState({\n      storage: window.sessionStorage,\n    }),\n  ],\n  state: {\n      allClients: [],\n      allProviders: [],\n      allClientDataLoading: false\n  },\n  mutations: {\n      SET_ALL_CLIENTS_IN_STATE (state, data) {\n          state.allClients = data\n      },\n      SET_ALL_PROVIDERS_IN_STATE (state, data) {\n          state.allProviders = data\n      },\n      SET_ALL_CLIENTS_DATA_LOADING_IN_STATE (state, data) {\n          state.allClientDataLoading = data\n      },\n  },\n  actions: {\n      getAllClients ({ commit }) {\n          commit('SET_ALL_CLIENTS_DATA_LOADING_IN_STATE', true)\n          Api().get('client/all').then((response) => {\n              commit('SET_ALL_CLIENTS_IN_STATE', response.data.clients)\n              commit('SET_ALL_CLIENTS_DATA_LOADING_IN_STATE', true)\n          }).catch((error) => {\n              console.log(error)\n          })\n      },\n      getAllProviders ({ commit }) {\n          Api().get('provider/all').then((response) => {\n              commit('SET_ALL_PROVIDERS_IN_STATE', response.data.providers)\n          }).catch((error) => {\n              console.log(error)\n          })\n      },\n  },\n  modules: {},\n});\n"]}]}